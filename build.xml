<?xml version="1.0" encoding="UTF-8"?>
<project name="signforge" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.javax.json-1.0.4.classpath">
    <pathelement location="${basedir}/javax.json-1.0.4.jar"/>
  </path>
  
  <path id="library.jtps.classpath">
    <pathelement location="${basedir}/jTPS/dist/jTPS.jar"/>
  </path>
  
  <path id="library.junit:junit:4.12.classpath">
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="library.lib.classpath">
    <pathelement location="${basedir}/DesktopJavaFramework/dist/lib/PropertiesManager.jar"/>
    <pathelement location="${basedir}/DesktopJavaFramework/dist/lib/jTPS.jar"/>
    <pathelement location="${basedir}/DesktopJavaFramework/dist/lib/javax.json-1.0.4.jar"/>
  </path>
  
  <path id="library.org.testfx:testfx-core:4.0.10-alpha.classpath">
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/testfx-core-4.0.10-alpha.jar"/>
    <pathelement location="${basedir}/lib/testfx-internal-java8-4.0.10-alpha.jar"/>
  </path>
  
  <path id="library.propertiesmanager.classpath">
    <pathelement location="${basedir}/PropertiesManager/dist/PropertiesManager.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module jTPS -->
  
  <dirname property="module.jtps.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.jtps" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.jtps" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.jtps" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.jtps" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="jtps.output.dir" value="${module.jtps.basedir}/out/production/jTPS"/>
  <property name="jtps.testoutput.dir" value="${module.jtps.basedir}/out/test/jTPS"/>
  
  <path id="jtps.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="jtps.module.production.classpath">
    <path refid="${module.jdk.classpath.jtps}"/>
  </path>
  
  <path id="jtps.runtime.production.module.classpath">
    <pathelement location="${jtps.output.dir}"/>
  </path>
  
  <path id="jtps.module.classpath">
    <path refid="${module.jdk.classpath.jtps}"/>
    <pathelement location="${jtps.output.dir}"/>
  </path>
  
  <path id="jtps.runtime.module.classpath">
    <pathelement location="${jtps.testoutput.dir}"/>
    <pathelement location="${jtps.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.jtps">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.jtps">
    <patternset refid="excluded.from.module.jtps"/>
  </patternset>
  
  <path id="jtps.module.sourcepath">
    <dirset dir="${module.jtps.basedir}/jTPS">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.jtps" depends="compile.module.jtps.production,compile.module.jtps.tests" description="Compile module jTPS"/>
  
  <target name="compile.module.jtps.production" description="Compile module jTPS; production classes">
    <mkdir dir="${jtps.output.dir}"/>
    <javac destdir="${jtps.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.jtps}/javac">
      <compilerarg line="${compiler.args.jtps}"/>
      <bootclasspath refid="jtps.module.bootclasspath"/>
      <classpath refid="jtps.module.production.classpath"/>
      <src refid="jtps.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.jtps"/>
    </javac>
    
    <copy todir="${jtps.output.dir}">
      <fileset dir="${module.jtps.basedir}/jTPS/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.jtps.tests" depends="compile.module.jtps.production" description="compile module jTPS; test classes" unless="skip.tests"/>
  
  <target name="clean.module.jtps" description="cleanup module">
    <delete dir="${jtps.output.dir}"/>
    <delete dir="${jtps.testoutput.dir}"/>
  </target>

  
  
  <!-- Module PropertiesManager -->
  
  <dirname property="module.propertiesmanager.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.propertiesmanager" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.propertiesmanager" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.propertiesmanager" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.propertiesmanager" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="propertiesmanager.output.dir" value="${module.propertiesmanager.basedir}/out/production/PropertiesManager"/>
  <property name="propertiesmanager.testoutput.dir" value="${module.propertiesmanager.basedir}/out/test/PropertiesManager"/>
  
  <path id="propertiesmanager.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="propertiesmanager.module.production.classpath">
    <path refid="${module.jdk.classpath.propertiesmanager}"/>
  </path>
  
  <path id="propertiesmanager.runtime.production.module.classpath">
    <pathelement location="${propertiesmanager.output.dir}"/>
  </path>
  
  <path id="propertiesmanager.module.classpath">
    <path refid="${module.jdk.classpath.propertiesmanager}"/>
    <pathelement location="${propertiesmanager.output.dir}"/>
  </path>
  
  <path id="propertiesmanager.runtime.module.classpath">
    <pathelement location="${propertiesmanager.testoutput.dir}"/>
    <pathelement location="${propertiesmanager.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.propertiesmanager">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.propertiesmanager">
    <patternset refid="excluded.from.module.propertiesmanager"/>
  </patternset>
  
  <path id="propertiesmanager.module.sourcepath">
    <dirset dir="${module.propertiesmanager.basedir}/PropertiesManager">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.propertiesmanager" depends="compile.module.propertiesmanager.production,compile.module.propertiesmanager.tests" description="Compile module PropertiesManager"/>
  
  <target name="compile.module.propertiesmanager.production" description="Compile module PropertiesManager; production classes">
    <mkdir dir="${propertiesmanager.output.dir}"/>
    <javac destdir="${propertiesmanager.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.propertiesmanager}/javac">
      <compilerarg line="${compiler.args.propertiesmanager}"/>
      <bootclasspath refid="propertiesmanager.module.bootclasspath"/>
      <classpath refid="propertiesmanager.module.production.classpath"/>
      <src refid="propertiesmanager.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.propertiesmanager"/>
    </javac>
    
    <copy todir="${propertiesmanager.output.dir}">
      <fileset dir="${module.propertiesmanager.basedir}/PropertiesManager/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.propertiesmanager.tests" depends="compile.module.propertiesmanager.production" description="compile module PropertiesManager; test classes" unless="skip.tests"/>
  
  <target name="clean.module.propertiesmanager" description="cleanup module">
    <delete dir="${propertiesmanager.output.dir}"/>
    <delete dir="${propertiesmanager.testoutput.dir}"/>
  </target>
  
  
  <!-- Module DesktopJavaFramework -->
  
  <dirname property="module.desktopjavaframework.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.desktopjavaframework" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.desktopjavaframework" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.desktopjavaframework" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.desktopjavaframework" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="desktopjavaframework.output.dir" value="${module.desktopjavaframework.basedir}/out/production/DesktopJavaFramework"/>
  <property name="desktopjavaframework.testoutput.dir" value="${module.desktopjavaframework.basedir}/out/test/DesktopJavaFramework"/>
  
  <path id="desktopjavaframework.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="desktopjavaframework.module.production.classpath">
    <path refid="${module.jdk.classpath.desktopjavaframework}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.propertiesmanager.classpath"/>
    <path refid="library.javax.json-1.0.4.classpath"/>
    <path refid="library.jtps.classpath"/>
    <pathelement location="${jtps.output.dir}"/>
    <pathelement location="${propertiesmanager.output.dir}"/>
  </path>
  
  <path id="desktopjavaframework.runtime.production.module.classpath">
    <pathelement location="${desktopjavaframework.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.propertiesmanager.classpath"/>
    <path refid="library.javax.json-1.0.4.classpath"/>
    <path refid="library.jtps.classpath"/>
    <path refid="jtps.runtime.production.module.classpath"/>
    <path refid="propertiesmanager.runtime.production.module.classpath"/>
  </path>
  
  <path id="desktopjavaframework.module.classpath">
    <path refid="${module.jdk.classpath.desktopjavaframework}"/>
    <pathelement location="${desktopjavaframework.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.propertiesmanager.classpath"/>
    <path refid="library.javax.json-1.0.4.classpath"/>
    <path refid="library.jtps.classpath"/>
    <pathelement location="${jtps.testoutput.dir}"/>
    <pathelement location="${jtps.output.dir}"/>
    <pathelement location="${propertiesmanager.testoutput.dir}"/>
    <pathelement location="${propertiesmanager.output.dir}"/>
  </path>
  
  <path id="desktopjavaframework.runtime.module.classpath">
    <pathelement location="${desktopjavaframework.testoutput.dir}"/>
    <pathelement location="${desktopjavaframework.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.propertiesmanager.classpath"/>
    <path refid="library.javax.json-1.0.4.classpath"/>
    <path refid="library.jtps.classpath"/>
    <path refid="jtps.runtime.module.classpath"/>
    <path refid="propertiesmanager.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.desktopjavaframework">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.desktopjavaframework">
    <patternset refid="excluded.from.module.desktopjavaframework"/>
  </patternset>
  
  <path id="desktopjavaframework.module.sourcepath">
    <dirset dir="${module.desktopjavaframework.basedir}/DesktopJavaFramework">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.desktopjavaframework" depends="compile.module.desktopjavaframework.production,compile.module.desktopjavaframework.tests" description="Compile module DesktopJavaFramework"/>
  
  <target name="compile.module.desktopjavaframework.production" depends="compile.module.jtps,compile.module.propertiesmanager" description="Compile module DesktopJavaFramework; production classes">
    <mkdir dir="${desktopjavaframework.output.dir}"/>
    <javac destdir="${desktopjavaframework.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.desktopjavaframework}/javac">
      <compilerarg line="${compiler.args.desktopjavaframework}"/>
      <bootclasspath refid="desktopjavaframework.module.bootclasspath"/>
      <classpath refid="desktopjavaframework.module.production.classpath"/>
      <src refid="desktopjavaframework.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.desktopjavaframework"/>
    </javac>
    
    <copy todir="${desktopjavaframework.output.dir}">
      <fileset dir="${module.desktopjavaframework.basedir}/DesktopJavaFramework/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.desktopjavaframework.tests" depends="compile.module.desktopjavaframework.production" description="compile module DesktopJavaFramework; test classes" unless="skip.tests"/>
  
  <target name="clean.module.desktopjavaframework" description="cleanup module">
    <delete dir="${desktopjavaframework.output.dir}"/>
    <delete dir="${desktopjavaframework.testoutput.dir}"/>
  </target>
  
  
  <!-- Module SignForge -->
  
  <dirname property="module.signforge.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.signforge" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.signforge" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.signforge" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.signforge" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="signforge.output.dir" value="${module.signforge.basedir}/out/production/SignForge"/>
  <property name="signforge.testoutput.dir" value="${module.signforge.basedir}/out/test/SignForge"/>
  
  <path id="signforge.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="signforge.module.production.classpath">
    <path refid="${module.jdk.classpath.signforge}"/>
    <pathelement location="${desktopjavaframework.output.dir}"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar"/>
    <pathelement location="${propertiesmanager.output.dir}"/>
    <path refid="library.org.testfx:testfx-core:4.0.10-alpha.classpath"/>
    <path refid="library.junit:junit:4.12.classpath"/>
  </path>
  
  <path id="signforge.runtime.production.module.classpath">
    <pathelement location="${signforge.output.dir}"/>
    <path refid="desktopjavaframework.runtime.production.module.classpath"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar"/>
    <path refid="propertiesmanager.runtime.production.module.classpath"/>
    <path refid="library.org.testfx:testfx-core:4.0.10-alpha.classpath"/>
    <path refid="library.junit:junit:4.12.classpath"/>
  </path>
  
  <path id="signforge.module.classpath">
    <path refid="${module.jdk.classpath.signforge}"/>
    <pathelement location="${signforge.output.dir}"/>
    <pathelement location="${desktopjavaframework.testoutput.dir}"/>
    <pathelement location="${desktopjavaframework.output.dir}"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar"/>
    <pathelement location="${propertiesmanager.testoutput.dir}"/>
    <pathelement location="${propertiesmanager.output.dir}"/>
    <path refid="library.org.testfx:testfx-core:4.0.10-alpha.classpath"/>
    <path refid="library.junit:junit:4.12.classpath"/>
  </path>
  
  <path id="signforge.runtime.module.classpath">
    <pathelement location="${signforge.testoutput.dir}"/>
    <pathelement location="${signforge.output.dir}"/>
    <path refid="desktopjavaframework.runtime.module.classpath"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar"/>
    <path refid="propertiesmanager.runtime.module.classpath"/>
    <path refid="library.org.testfx:testfx-core:4.0.10-alpha.classpath"/>
    <path refid="library.junit:junit:4.12.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.signforge">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.signforge">
    <patternset refid="excluded.from.module.signforge"/>
  </patternset>
  
  <path id="signforge.module.sourcepath">
    <dirset dir="${module.signforge.basedir}/SignForge">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="signforge.module.test.sourcepath">
    <dirset dir="${module.signforge.basedir}/SignForge">
      <include name="tests"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.signforge" depends="compile.module.signforge.production,compile.module.signforge.tests" description="Compile module SignForge"/>
  
  <target name="compile.module.signforge.production" depends="compile.module.desktopjavaframework,compile.module.propertiesmanager" description="Compile module SignForge; production classes">
    <mkdir dir="${signforge.output.dir}"/>
    <javac destdir="${signforge.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.signforge}/javac">
      <compilerarg line="${compiler.args.signforge}"/>
      <bootclasspath refid="signforge.module.bootclasspath"/>
      <classpath refid="signforge.module.production.classpath"/>
      <src refid="signforge.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.signforge"/>
    </javac>
    
    <copy todir="${signforge.output.dir}">
      <fileset dir="${module.signforge.basedir}/SignForge/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.signforge.tests" depends="compile.module.signforge.production" description="compile module SignForge; test classes" unless="skip.tests">
    <mkdir dir="${signforge.testoutput.dir}"/>
    <javac destdir="${signforge.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.signforge}/javac">
      <compilerarg line="${compiler.args.signforge}"/>
      <bootclasspath refid="signforge.module.bootclasspath"/>
      <classpath refid="signforge.module.classpath"/>
      <src refid="signforge.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.signforge"/>
    </javac>
    
    <copy todir="${signforge.testoutput.dir}">
      <fileset dir="${module.signforge.basedir}/SignForge/tests">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.signforge" description="cleanup module">
    <delete dir="${signforge.output.dir}"/>
    <delete dir="${signforge.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.jtps, clean.module.propertiesmanager, clean.module.desktopjavaframework, clean.module.signforge" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.jtps, compile.module.propertiesmanager, compile.module.desktopjavaframework, compile.module.signforge" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>